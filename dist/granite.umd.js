var h=Object.defineProperty;var u=(t,i,s)=>i in t?h(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s;var d=(t,i,s)=>(u(t,typeof i!="symbol"?i+"":i,s),s);(function(t,i){typeof exports=="object"&&typeof module!="undefined"?module.exports=i():typeof define=="function"&&define.amd?define(i):(t=typeof globalThis!="undefined"?globalThis:t||self,t.Granite=i())})(this,function(){"use strict";const t=(s,e=30)=>{let o;return(...l)=>{o===void 0&&(o=setTimeout(()=>{o=void 0,s(...l)},e))}};class i{constructor(e){d(this,"el");d(this,"numColumns",0);d(this,"options");if(e.el===void 0)throw Error('options missing "el"');if(e.childSelector===void 0)throw Error('options missing "childSelector"');this.options=e,this.el=e.el,e.gridClassName&&this.el.classList.add(e.gridClassName),window.addEventListener("resize",t(this.reflow.bind(this))),this.numColumns=0,this.reflow()}arrange(e){const o=this.el.querySelectorAll(this.options.childSelector),l=Array(e);for(let n=0;n<l.length;++n){const r=document.createElement("div");this.options.columnClassName&&(r.className=this.options.columnClassName),r.style.width=`${100/e}%`,l[n]=r}o.forEach((n,r)=>{l[r%e].appendChild(n)}),this.el.innerHTML="",l.forEach(n=>{this.el.appendChild(n)})}reflow(){let e=parseInt(getComputedStyle(this.el).getPropertyValue("--num-columns"));isNaN(e)&&(e=1),e!==this.numColumns&&(this.numColumns=e,this.arrange(this.numColumns))}}return i});
